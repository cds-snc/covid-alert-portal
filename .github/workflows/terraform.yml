name: "Terraform"

on:
  push:
    branches:
      - main
    paths:
      - "config/**"
      - ".github/workflows/terraform.yml"
  pull_request:
    paths:
      - "config/**"
      - ".github/workflows/terraform.yml"

defaults:
  run:
    shell: bash
    working-directory: config/terraform/aws

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ca-central-1
  TF_VAR_ecs_secret_api_authorization: ${{ secrets.API_AUTHORIZATION }}
  TF_VAR_ecs_secret_api_endpoint: ${{ secrets.API_ENDPOINT}}
  TF_VAR_ecs_secret_django_secret_key: ${{ secrets.DJANGO_SECRET_KEY }}
  TF_VAR_ecs_secret_freshdesk_api_endpoint: ${{ secrets.FRESHDESK_API_ENDPOINT }}
  TF_VAR_ecs_secret_freshdesk_api_key: ${{ secrets.FRESHDESK_API_KEY }}
  TF_VAR_ecs_secret_freshdesk_product_id: ${{ secrets.FRESHDESK_PRODUCT_ID }}
  TF_VAR_ecs_secret_new_relic_license_key: ${{ secrets.NEW_RELIC_LICENSE_KEY}}
  TF_VAR_ecs_secret_notify_api_key: ${{ secrets.NOTIFY_API_KEY }}
  TF_VAR_rds_server_db_password: ${{ secrets.DB_PASSWORD }}
  TF_VAR_slack_webhook: ${{ secrets.SLACK_WEBHOOK }}
  TF_VAR_ecs_secret_qrcode_signature_private_key: ${{ secrets.QRCODE_SIGNATURE_PRIVATE_KEY }}
  TF_VAR_ecs_secret_qrcode_notify_api_key: ${{ secrets.QRCODE_NOTIFY_API_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  terraform-plan:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.1
          terraform_wrapper: false

      - name: Terraform Plan
        uses: cds-snc/terraform-plan@v1
        with:
          comment-delete: true
          directory: ./config/terraform/aws
          github-token: ${{ secrets.GITHUB_TOKEN }}

  terraform-security-scan:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Remove .tfvars
        run: rm variables.auto.tfvars

      - name: Terraform security scan
        uses: aquasecurity/tfsec-pr-commenter-action@89c691a931c555965b3f2c85857f7aa08980e311 # v0.1.7
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  terraform-apply:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.1

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Init
        run: |
          terraform init
      - name: Terraform Plan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: terraform plan -out terraform.tfplan

      - name: Terraform Apply
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: terraform apply -auto-approve terraform.tfplan
